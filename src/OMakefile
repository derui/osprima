########################################################################
# The standard OMakefile.
# You will usually need to modify this file for your project.
open MyFunction
open MyOCaml

########################################################################
# Phony targets are scoped, so you probably want to declare them first.
#
.PHONY: clean all install

#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true
#
OCAMLPACKS[] =
    camomile
    core
    tiny_json
#
if $(not $(OCAMLFIND_EXISTS))
    eprintln(This project requires ocamlfind, but is was not found.)
    eprintln(You need to install ocamlfind and run "omake --configure".)
    exit 1

#
# Include path
#
OCAMLINCLUDES += .

#
# Compile native or byte code?
#
# The default values are defined as follows:
#
NATIVE_ENABLED = true
BYTE_ENABLED = true

#
# Various options
#
OCAMLFLAGS    += -thread -annot -bin-annot
OCAMLCFLAGS   +=
OCAMLOPTFLAGS +=
MENHIR_FLAGS += --strict --infer --explain
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Generated files
#
# Workaround for the fact that ocamldep does not pay attention to .mll
# and .mly files.
#
LocalOCamlGeneratedFiles(js_parser.ml js_lexer.ml)

################################################
# Build an OCaml program
#

# OCAML_LIBS +=
# OCAML_CLIBS +=
# OCAML_OTHER_LIBS += nums
# OCAML_LIB_FLAGS +=
#
LIB = osprima

PROGRAM=osparse

FILE[]= $(ls *.ml)
FILE += $(ls *.mly)
FILE += $(ls *.mll)

programs = $(OCamlProgram $(PROGRAM), $(removesuffix $(FILE)))

all: $(programs)

.DEFAULT: all

INSTALL_DIR = $(dirname $(shella which ocamlc))
install:
	CreateInstalled($(LIB), $(glob i, src/*ml) $(glob i, src/*c))
	cp ./osparse$(EXE) $(INSTALL_DIR)

uninstall:
	rm -f $(INSTALL_DIR)/osparse$(EXE)
